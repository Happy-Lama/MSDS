# Generated by Django 4.2.4 on 2023-09-14 07:42

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_tel', models.CharField(max_length=20)),
                ('service', models.CharField(choices=[('Domain', 'Domain'), ('Insurance', 'Insurance'), ('Licenses', 'Licenses'), ('SSL Certificates', 'SSL Certificates')], max_length=100)),
                ('expiry_date', models.DateField()),
                ('payment_status', models.CharField(choices=[('Paid', 'Paid'), ('Invoiced', 'Invoiced'), ('Not Paid', 'Not Paid')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('service_offered', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_tel', models.CharField(max_length=20)),
                ('contact_email', models.EmailField(max_length=254)),
                ('website', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('reset_password', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_users_groups', related_query_name='custom_user_group', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_users_permissions', related_query_name='custom_user_permission', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SSLCertificateService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_domain', models.CharField(max_length=100)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_booked', models.DateField()),
                ('expiry_date', models.DateField()),
                ('subscription_type', models.CharField(choices=[('Annual', 'Annual'), ('Monthly', 'Monthly'), ('Daily', 'Daily')], max_length=20)),
                ('serviced_by', models.CharField(max_length=100)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Services.serviceprovider')),
            ],
        ),
        migrations.CreateModel(
            name='LicenseService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_name', models.CharField(max_length=100)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_booked', models.DateField()),
                ('expiry_date', models.DateField()),
                ('subscription_type', models.CharField(choices=[('Annual', 'Annual'), ('Monthly', 'Monthly'), ('Daily', 'Daily')], max_length=20)),
                ('serviced_processed_by', models.CharField(max_length=100)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Services.serviceprovider')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_type', models.CharField(max_length=100)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('beneficiary', models.CharField(max_length=100)),
                ('date_booked', models.DateField()),
                ('expiry_date', models.DateField()),
                ('subscription', models.CharField(max_length=100)),
                ('serviced_processed_by', models.CharField(max_length=100)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Services.serviceprovider')),
            ],
        ),
        migrations.CreateModel(
            name='DomainService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(max_length=100)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_booked', models.DateField()),
                ('expiry_date', models.DateField()),
                ('subscription_type', models.CharField(choices=[('Annual', 'Annual'), ('Monthly', 'Monthly'), ('Daily', 'Daily')], max_length=20)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Services.client')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Services.serviceprovider')),
            ],
        ),
    ]
